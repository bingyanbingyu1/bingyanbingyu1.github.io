<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>利用GitHub搭建4核16GB运行内存的美国服务器！网络速度超级快！</title>
      <link href="/2025/06/22/%E5%88%A9%E7%94%A8GitHub%E6%90%AD%E5%BB%BA%E9%AB%98%E9%85%8D%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2025/06/22/%E5%88%A9%E7%94%A8GitHub%E6%90%AD%E5%BB%BA%E9%AB%98%E9%85%8D%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h4 id="利用GitHub搭建4核16GB运行内存的美国服务器！网络速度超级快！"><a href="#利用GitHub搭建4核16GB运行内存的美国服务器！网络速度超级快！" class="headerlink" title="利用GitHub搭建4核16GB运行内存的美国服务器！网络速度超级快！"></a>利用GitHub搭建4核16GB运行内存的美国服务器！网络速度超级快！</h4><p>通过GitHub代码空间功能，利用docker命令可以创建一个系统容器，比如Windows11也可以是其他的操作系统，通过内网穿透，实现远程控制这台服务器。可以用来搭建节点，每个月可以白嫖120小时的超高速网络！</p><p>视频教程：<a href="https://youtu.be/b6doF2jlM-g">https://youtu.be/b6doF2jlM-g</a></p><p>注意：跑大流量有封号风险，请务必准备多几个小号来测试，建议模拟真实开发环境后再跑节点，先跑几个正常程序员开发的项目，降低被检测风险，仅供学习交流，请勿用于非法用途。</p><hr><h5 id="1-创建一个私密仓库"><a href="#1-创建一个私密仓库" class="headerlink" title="1. 创建一个私密仓库"></a>1. 创建一个私密仓库</h5><p><a href="https://github.com/">https://github.com</a></p><h5 id="2-打开该仓库的代码空间-创建代码空间"><a href="#2-打开该仓库的代码空间-创建代码空间" class="headerlink" title="2.打开该仓库的代码空间 &gt; 创建代码空间"></a>2.打开该仓库的代码空间 &gt; 创建代码空间</h5><h5 id="3-创建一个docker可执行文件"><a href="#3-创建一个docker可执行文件" class="headerlink" title="3.创建一个docker可执行文件"></a>3.创建一个docker可执行文件</h5><p>比如我要创建一个window轻量级的系统：windows.yaml<br>如果要部署其它系统可以复制让AI帮你修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">services:</span><br><span class="line">  windows-ltsc:</span><br><span class="line">    image: dockurr/windows</span><br><span class="line">    container_name: win10-ltsc</span><br><span class="line">    environment:</span><br><span class="line">      VERSION: &quot;10&quot;          # 使用 Windows 10 LTSC 长期服务版（无应用商店/Edge等冗余组件）</span><br><span class="line">      EDITION: &quot;Enterprise&quot;  # 企业版更适合轻量化</span><br><span class="line">      USERNAME: &quot;meegooboo&quot;  # 账户名</span><br><span class="line">      PASSWORD: &quot;meegooboo&quot; # 密码</span><br><span class="line">      RAM_SIZE: &quot;8G&quot;         # 内存减至 8GB（LTSC 最低要求2G）</span><br><span class="line">      CPU_CORES: &quot;4&quot;         # CPU 核心数</span><br><span class="line">      DISK_SIZE: &quot;64G&quot;       # 磁盘精简至 64GB（LTSC 安装后仅需 12GB）</span><br><span class="line">      DISABLE_VIRTIO: &quot;true&quot; # 禁用虚拟驱动（提升老硬件兼容性）</span><br><span class="line">      SKIP_TPM_CHECK: &quot;true&quot; # 绕过 TPM 检查（减少启动项）</span><br><span class="line">    devices:</span><br><span class="line">      - /dev/kvm</span><br><span class="line">      - /dev/net/tun</span><br><span class="line">    cap_add:</span><br><span class="line">      - NET_ADMIN</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;8007:8006&quot;          # 修改 Web 控制台端口避免冲突</span><br><span class="line">      - &quot;3390:3389/tcp&quot;      # 修改 RDP 端口避免冲突</span><br><span class="line">    stop_grace_period: 1m    # 缩短关闭等待时间</span><br><span class="line">    restart: unless-stopped   # 异常时自动重启</span><br></pre></td></tr></table></figure><h5 id="4-启动系统"><a href="#4-启动系统" class="headerlink" title="4. 启动系统"></a>4. 启动系统</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose -f 你的文件名称.yaml up</span><br></pre></td></tr></table></figure><h5 id="5-通过VS-Code内置的内网穿透工具-穿透控制端口-打开链接即可远程控制该服务器"><a href="#5-通过VS-Code内置的内网穿透工具-穿透控制端口-打开链接即可远程控制该服务器" class="headerlink" title="5.通过VS Code内置的内网穿透工具 &gt; 穿透控制端口 &gt; 打开链接即可远程控制该服务器"></a>5.通过VS Code内置的内网穿透工具 &gt; 穿透控制端口 &gt; 打开链接即可远程控制该服务器</h5>]]></content>
      
      
      <categories>
          
          <category> 技术教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> 服务器 </tag>
            
            <tag> Docker </tag>
            
            <tag> Codespaces </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【教程】MCP 保姆级教程</title>
      <link href="/2025/04/14/%E3%80%90%E6%95%99%E7%A8%8B%E3%80%91MCP-%E4%BF%9D%E5%A7%86%E7%BA%A7%E6%95%99%E7%A8%8B/"/>
      <url>/2025/04/14/%E3%80%90%E6%95%99%E7%A8%8B%E3%80%91MCP-%E4%BF%9D%E5%A7%86%E7%BA%A7%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="AI-速览"><a href="#AI-速览" class="headerlink" title="AI 速览"></a>AI 速览</h2><p>本文讨论了MCP幼儿园级别入门图文教程，介绍了MCP的概念、实操步骤、补充案例等内容，帮助读者上手体验解锁AI的动手能力。关键要点包括：</p><ol><li><strong>MCP简介</strong>：MCP即模型上下文协议，规定外部数据和工具与大模型的连接和“交流”方式。MCP Host是支持调用MCP工具的大模型对话客户端，MCP Server是开发者基于MCP协议开发的“工具”程序。</li><li><strong>Cursor前置准备</strong>：需下载Cursor客户端和Node.js，配置MCP工具清单，在Cursor软件的设置中操作，创建mcp.json文件并粘贴配置代码，添加服务亮起绿灯表示准备就绪。</li><li><strong>优化体验</strong>：可在Cursor Settings -&gt; “Features” -&gt; “Agent”中打开 “auto-run mode” 开关，避免每次调用弹窗确认，也可添加禁止的命令防止误操作。</li><li><strong>MCP工具使用</strong>：在Agent模式下询问问题，可了解可用工具及其功能。查找新工具需了解mcp.json服务器清单，可删除不用的工具代码块，也可从网站复制新工具代码添加到mcp.json文件。</li><li><strong>补充案例</strong>：以添加高德地图功能为例，需先在高德开放平台创建API Key，再将特定代码复制到mcp.json文件。</li></ol><hr><p>📌 <strong>简介</strong></p><ul><li>本文档是一份详细的 <strong>MCP 幼儿园级别入门图文教程</strong>，旨在带你先上手，体验 <strong>解锁 AI的 动手能力</strong>！</li><li>本期视频教程在这里哦~ 👇</li></ul><iframe width="560" height="315" src="https://www.youtube.com/embed/jz4SxHZhJok?si=wUObwjTz04kGAORY" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><hr><h2 id="一、MCP简介"><a href="#一、MCP简介" class="headerlink" title="一、MCP简介"></a>一、MCP简介</h2><p>Anthropic MCP 官方指南：<a href="https://docs.anthropic.com/en/docs/agents-and-tools/mcp">https://docs.anthropic.com/en/docs/agents-and-tools/mcp</a></p><p>MCP （Model Context Protocol）模型上下文协议。</p><p>简单来说：</p><ul><li><strong>MCP 本身是一个协议</strong>：规定了外部的数据和工具怎么样跟大模型连接和“交流”。</li><li><strong>MCP Host</strong>：支持调用MCP工具的各类大模型对话客户端，例如cursor</li><li><strong>MCP Server</strong>：开发者基于 MCP 协议开发的各种“工具”，本质上是一个具备某种功能的程序，比如可以文件操作、网页浏览等。</li></ul><p>我们只需要准备好环境，简单配置后，AI 就能在需要时，自己挑选合适的工具干活啦！💪</p><hr><h2 id="二、实操"><a href="#二、实操" class="headerlink" title="二、实操"></a>二、实操</h2><h3 id="1-Cursor-前置准备"><a href="#1-Cursor-前置准备" class="headerlink" title="1. Cursor 前置准备"></a>1. Cursor 前置准备</h3><h4 id="第一步：下载-Cursor-客户端"><a href="#第一步：下载-Cursor-客户端" class="headerlink" title="第一步：下载 Cursor 客户端"></a>第一步：下载 Cursor 客户端</h4><ol><li>访问 <a href="https://cursor.sh/">Cursor</a> 官网下载并安装<ul><li>Cursor是一个支持 MCP 的 AI 编程工具</li></ul></li></ol><h4 id="第二步：下载-Node-js"><a href="#第二步：下载-Node-js" class="headerlink" title="第二步：下载 Node.js"></a>第二步：下载 Node.js</h4><ol><li>访问 <a href="https://nodejs.org/zh-cn">Node.js</a> 官网下载 <strong>LTS</strong> 版本并安装。</li><li>常规安装即可。</li><li><strong>验证安装（可选）</strong>：<br>a. 打开电脑的“命令提示符 (cmd)”<br>b. 输入 <code>node -v</code> 并按回车<br>c. 如果显示版本号，就说明安装成功</li></ol><p><img src="/images/mcp-tutorial/5.png" alt="Node.js 安装验证"></p><h4 id="第三步：配置-MCP-工具清单"><a href="#第三步：配置-MCP-工具清单" class="headerlink" title="第三步：配置 MCP 工具清单"></a>第三步：配置 MCP 工具清单</h4><ol><li>打开 Cursor 软件</li><li>找到 “首选项” (Preferences) -&gt; “Cursor Settings”</li><li>在设置里找到 MCP 选项卡，并点击 “Add a new global MCP server”<br><img src="/images/mcp-tutorial/6.png" alt="Cursor MCP 设置"></li><li>如果是第一次，会提示创建 <code>mcp.json</code> 文件，点击 <strong>创建 (Create)</strong><br><img src="/images/mcp-tutorial/7.png" alt="创建 mcp.json"><blockquote><p>这个文件就是你的“工具清单”</p></blockquote></li><li>复制 MCP 配置代码，粘贴到刚刚创建的 <code>mcp.json</code> 文件里<br><img src="/images/mcp-tutorial/8.png" alt="复制粘贴 MCP 配置"><blockquote><p>（可以手动修改和限制本地文件操作的盘符地址）</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;mcpServers&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;@smithery-ai-server-sequential-thinking&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cmd&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="string">&quot;/c&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;npx&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;-y&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;@smithery/cli@latest&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;run&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;@smithery-ai/server-sequential-thinking&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;--config&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;&#123;&#125;&quot;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;@smithery-ai-fetch&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cmd&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="string">&quot;/c&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;npx&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;-y&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;@smithery/cli@latest&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;run&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;@smithery-ai/fetch&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;--config&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;&#123;&#125;&quot;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;files&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cmd&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="string">&quot;/c&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;npx&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;-y&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;@modelcontextprotocol/server-filesystem&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;C:/Users/Administrator/Desktop&quot;</span> <span class="comment">// 修改为你允许操作的盘符地址</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;@wopal-mcp-server-hotnews&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cmd&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="string">&quot;/c&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;npx&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;@wopal/mcp-server-hotnews&quot;</span></span><br><span class="line">          <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;playwright&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cmd&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="string">&quot;/c&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;npx&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;-y&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="string">&quot;@executeautomation/playwright-mcp-server&quot;</span></span><br><span class="line">          <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;hn-server&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cmd&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="string">&quot;/c&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;npx&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;-y&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;@smithery/cli@latest&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;run&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;@pskill9/hn-server&quot;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;duckduckgo-mcp-server&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cmd&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="string">&quot;/c&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;npx&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;-y&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;@smithery/cli@latest&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;run&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;@nickclyde/duckduckgo-mcp-server&quot;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li>回到 Cursor 的 MCP 设置界面<ul><li>添加的服务前面亮起 <strong>绿灯 ✅</strong> 就表示准备就绪</li><li>如果没亮，点旁边的 <strong>刷新</strong> 按钮<br><img src="/images/mcp-tutorial/9.png" alt="MCP 服务状态"></li></ul></li></ol><h3 id="2-MCP-工具基本使用方式"><a href="#2-MCP-工具基本使用方式" class="headerlink" title="2. MCP 工具基本使用方式"></a>2. MCP 工具基本使用方式</h3><ol><li>在聊天界面，确保模式选择了 <strong>Agent</strong><br><img src="/images/mcp-tutorial/10.png" alt="选择 Agent 模式"></li><li>在 Agent 模式下询问问题<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我现在有哪些可用的 MCP 工具？它们分别能做什么？</span><br></pre></td></tr></table></figure></li><li>AI 会告诉你它拥有的“工具”和各自的“说明书”<br><img src="/images/mcp-tutorial/11.png" alt="AI 回答可用工具"></li></ol><h3 id="3-查找新的-MCP-工具-服务器"><a href="#3-查找新的-MCP-工具-服务器" class="headerlink" title="3. 查找新的 MCP 工具&#x2F;服务器"></a>3. 查找新的 MCP 工具&#x2F;服务器</h3><h4 id="第一步：了解mcp-json-服务器清单"><a href="#第一步：了解mcp-json-服务器清单" class="headerlink" title="第一步：了解mcp.json - 服务器清单"></a>第一步：了解mcp.json - 服务器清单</h4><ul><li><code>mcp.json</code> 就相当于我们拥有的mcp服务清单</li><li>每个 <code>&quot;名字&quot;:&#123;...&#125;,</code> 的结构就是一个工具的配置</li><li>如果觉得某个工具用不上，可以删除对应的 <code>&quot;服务名&quot;:&#123;...&#125;,</code> 代码块</li></ul><h4 id="第二步：添加新工具"><a href="#第二步：添加新工具" class="headerlink" title="第二步：添加新工具"></a>第二步：添加新工具</h4><ol><li>以 <a href="https://smithery.ai/">Smithery</a> 网站为例，在该网站找到想要的工具<br><img src="/images/mcp-tutorial/12.png" alt="查找新工具"></li><li>点进你想要的工具，这里以 Think Tool Server 为例子<br><img src="/images/mcp-tutorial/13.png" alt="工具详情页"></li><li>在右侧的Installation里选择对应的代码<blockquote><p>本次使用的工具是Cursor，文件格式是JSON，系统时Windows. 我们做出相应的选择就好</p></blockquote></li><li>复制工具代码<br><img src="/images/mcp-tutorial/14.png" alt="复制工具代码"><blockquote><p>复制中间绿框的就可以</p></blockquote></li><li>回到Cursor，打开 <code>mcp.json</code> 文件，在最后一个工具的 <code>&#125;</code> 后面加一个 <code>,</code><br><img src="/images/mcp-tutorial/15.png" alt="修改 mcp.json"></li><li>把复制的新工具代码粘贴进去，并且保存<br><img src="/images/mcp-tutorial/16.png" alt="粘贴并保存"></li></ol><hr><h2 id="三、补充案例（添加高德地图功能）"><a href="#三、补充案例（添加高德地图功能）" class="headerlink" title="三、补充案例（添加高德地图功能）"></a>三、补充案例（添加高德地图功能）</h2><h3 id="1-高德地图规划路线"><a href="#1-高德地图规划路线" class="headerlink" title="1. 高德地图规划路线"></a>1. 高德地图规划路线</h3><h4 id="第一步：创建-API-Key"><a href="#第一步：创建-API-Key" class="headerlink" title="第一步：创建 API Key"></a>第一步：创建 API Key</h4><ol><li>访问 <a href="https://console.amap.com/dev/key/app">高德开放平台</a> 控制台并登录</li><li>在 <strong>应用</strong> 中点击 <strong>创建新应用</strong><br><img src="/images/mcp-tutorial/17.png" alt="创建高德应用"></li><li>填写表单即可创建新的应用</li><li>添加Key，创建成功后，可获取 Key 和安全密钥<br><img src="/images/mcp-tutorial/18.png" alt="添加高德 Key"><br><img src="/images/mcp-tutorial/19.png" alt="添加高德 Key"><blockquote><p><strong>注意：</strong> 24小时内申请的 Key 不允许删除</p></blockquote></li></ol><h4 id="第二步：复制代码"><a href="#第二步：复制代码" class="headerlink" title="第二步：复制代码"></a>第二步：复制代码</h4><ol><li>复制以下黄色部分代码，粘贴到创建的 <code>mcp.json</code> 文件中<br><img src="/images/mcp-tutorial/20.png" alt="高德地图 MCP 配置代码"><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;mcpServers&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;amap-amap-sse&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://mcp.amap.com/sse?key=你在高德官网上申请的key&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p>官方 MCP Server 说明 ：<a href="https://lbs.amap.com/api/mcp-server/summary">概述-MCP Server | 高德地图API</a></p></blockquote></li></ol><hr><h2 id="四、MCP-服务聚合平台"><a href="#四、MCP-服务聚合平台" class="headerlink" title="四、MCP 服务聚合平台"></a>四、MCP 服务聚合平台</h2><table><thead><tr><th align="left">名称</th><th align="left">网址</th></tr></thead><tbody><tr><td align="left">MCP.so</td><td align="left"><a href="https://mcp.so/">https://mcp.so/</a></td></tr><tr><td align="left">阿里云百炼</td><td align="left"><a href="https://bailian.console.aliyun.com/mcp-market?tab=mc">https://bailian.console.aliyun.com/mcp-market?tab=mc</a>…</td></tr><tr><td align="left">HiMCP</td><td align="left"><a href="https://himcp.ai/">https://himcp.ai/</a></td></tr><tr><td align="left">Smithery.ai</td><td align="left"><a href="https://smithery.ai/">https://smithery.ai/</a></td></tr><tr><td align="left">Awesome MCP Servers</td><td align="left"><a href="https://mcpservers.org/">https://mcpservers.org/</a></td></tr><tr><td align="left">MCP Market</td><td align="left"><a href="https://mcpmarket.com/">https://mcpmarket.com/</a></td></tr><tr><td align="left">PulseMCP</td><td align="left"><a href="https://www.pulsemcp.com/servers">https://www.pulsemcp.com/servers</a></td></tr><tr><td align="left">Glama MCP</td><td align="left"><a href="https://glama.ai/mcp/servers">https://glama.ai/mcp/servers</a></td></tr><tr><td align="left">cursor.directory</td><td align="left"><a href="https://cursor.directory/mcp">https://cursor.directory/mcp</a></td></tr><tr><td align="left">Potkey.ai</td><td align="left"><a href="https://portkey.ai/mcp-servers">https://portkey.ai/mcp-servers</a></td></tr><tr><td align="left">MCP 官方开源库</td><td align="left"><a href="https://github.com/modelcontextprotocol/servers">https://github.com/modelcontextprotocol/servers</a></td></tr><tr><td align="left">Cline’s MCP Marketplace</td><td align="left"><a href="https://github.com/cline/mcp-marketplace">https://github.com/cline/mcp-marketplace</a></td></tr><tr><td align="left">MCP Hub</td><td align="left"><a href="https://www.aimcp.info/en">https://www.aimcp.info/en</a></td></tr><tr><td align="left">Reddit MCP 官方社区</td><td align="left"><a href="https://www.reddit.com/r/mcp/">https://www.reddit.com/r/mcp/</a></td></tr><tr><td align="left">shareMCP</td><td align="left"><a href="https://sharemcp.cn/">https://sharemcp.cn/</a></td></tr><tr><td align="left">MCPServers</td><td align="left"><a href="https://www.mcpservers.cn/">https://www.mcpservers.cn/</a></td></tr></tbody></table><hr><h2 id="五、支持-MCP-的客户端"><a href="#五、支持-MCP-的客户端" class="headerlink" title="五、支持 MCP 的客户端"></a>五、支持 MCP 的客户端</h2><table><thead><tr><th align="left">名称</th><th align="left">网址</th><th align="left">系统支持</th></tr></thead><tbody><tr><td align="left">Cursor</td><td align="left"><a href="https://www.cursor.com/">https://www.cursor.com/</a></td><td align="left">Windows、MacOS、Linux</td></tr><tr><td align="left">Cherry Studio</td><td align="left"><a href="https://cherry-ai.com/">https://cherry-ai.com/</a></td><td align="left">Windows、MacOS、Linux</td></tr><tr><td align="left">5ire</td><td align="left"><a href="https://5ire.app/">https://5ire.app/</a></td><td align="left">Windows、MacOS</td></tr><tr><td align="left">Continue</td><td align="left"><a href="https://continue.dev/">https://continue.dev/</a></td><td align="left">Windows、MacOS</td></tr><tr><td align="left">Cline</td><td align="left"><a href="https://marketplace.visu/">https://marketplace.visu</a>…</td><td align="left">Windows、MacOS</td></tr><tr><td align="left">ChatMCP</td><td align="left"><a href="https://github.com/dao">https://github.com/dao</a>…</td><td align="left">Windows、MacOS、Linux</td></tr><tr><td align="left">Claude Desktop</td><td align="left"><a href="https://claude.ai/downlo">https://claude.ai/downlo</a>…</td><td align="left">Windows、MacOS</td></tr><tr><td align="left">ClaudeMind</td><td align="left"><a href="https://claudemind.com/">https://claudemind.com/</a></td><td align="left">Windows、MacOS</td></tr><tr><td align="left">HyperChat</td><td align="left"><a href="https://github.com/BigS">https://github.com/BigS</a>…</td><td align="left">Windows、MacOS</td></tr><tr><td align="left">Zed</td><td align="left"><a href="https://zed.dev/">https://zed.dev/</a></td><td align="left">Windows、MacOS</td></tr><tr><td align="left">ChatWise</td><td align="left"><a href="https://chatwise.app/">https://chatwise.app/</a></td><td align="left">Windows、MacOS</td></tr></tbody></table><hr><hr><p><em>评论（0）</em><br><em>帮助中心</em><br><em>效率指南</em></p>]]></content>
      
      
      <categories>
          
          <category> 技术教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cursor </tag>
            
            <tag> MCP </tag>
            
            <tag> AI </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>quake360抓取订阅</title>
      <link href="/2025/04/13/quake360%E6%8A%93%E5%8F%96%E8%AE%A2%E9%98%85/"/>
      <url>/2025/04/13/quake360%E6%8A%93%E5%8F%96%E8%AE%A2%E9%98%85/</url>
      
        <content type="html"><![CDATA[<p>我发现很多订阅链接的响应头都会记录流量的使用数据，也就是会有一个 subscription-userinfo 信息。</p><p>那么直奔主题</p><p>首先你需要一个 <a href="https://quake.360.net/quake/#/index">quake360 网络空间测绘</a>（fofa 好像不行）。</p><p><a href="https://fofa.info/result?qbase64=Ym9keT0i6Ieq5Yqo5oqT5Y+WdGfpopHpgZPjgIHorqLpmIXlnLDlnYDjgIHlhazlvIDkupLogZTnvZHkuIrnmoRzc+OAgXNzcuOAgXZtZXNz44CBdHJvamFu6IqC54K55L+h5oGvIg==">fofa</a><br>然后使用这个语法搜索</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response:“subscription-userinfo:”</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">body=&quot;自动抓取tg频道、订阅地址、公开互联网上的ss、ssr、vmess、trojan节点信息&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">domain=&quot;ladeapp.com&quot; &amp;&amp; body=&quot;Hello world!&quot;</span><br></pre></td></tr></table></figure><p>然后你就会得到下图的结果</p><p><img src="https://cdn.ldstatic.com/optimized/4X/c/5/3/c53a7d9bac29cd27cb1c562b15c2d881b59c4927_2_488x500.jpeg" alt="IMG_20250324_205449"></p><p>带有红色方框这个响应头的，其实大多就表示有流量使用。<br>那我们直接就点击域名右侧的第二个图标，在新窗口打开链接（注意这时候只是打开了一个域名）</p><p>关键信息就在路径中。回到 360，看蓝色方框中的就是路径，把路径完整复制添加到刚才打开的网址的后面。</p><p>这时候你会发现新大陆。<br>要么是几个个不同协议的订阅链接，要么直接是一个可用的订阅链接。</p><p>好了说完了，手机码字将就看吧。<br>最后提醒下大家，如果有机场主，可要注意下自己的机场被扫到哦。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>雷电4模拟器一键宏安装与使用教程</title>
      <link href="/2025/03/30/%E9%9B%B7%E7%94%B54%E6%A8%A1%E6%8B%9F%E5%99%A8%E4%B8%80%E9%94%AE%E5%AE%8F%E6%95%99%E7%A8%8B/"/>
      <url>/2025/03/30/%E9%9B%B7%E7%94%B54%E6%A8%A1%E6%8B%9F%E5%99%A8%E4%B8%80%E9%94%AE%E5%AE%8F%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="雷电4模拟器一键宏安装与使用教程"><a href="#雷电4模拟器一键宏安装与使用教程" class="headerlink" title="雷电4模拟器一键宏安装与使用教程"></a>雷电4模拟器一键宏安装与使用教程</h1><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%; margin-bottom: 20px;"><iframe src="//player.bilibili.com/player.html?isOutside=true&aid=114445627952709&bvid=BV1yEGozSEC5&cid=29777398297&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div><blockquote><p>视频教程：雷电4模拟器一键宏安装与使用详细步骤</p></blockquote><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><ol><li><p><strong>关闭杀毒软件</strong><br>插件可能会报毒，请先关闭360、火绒等杀毒软件</p></li><li><p><strong>安装雷电4一键宏完整安装包</strong><br>运行安装程序完成安装</p></li><li><p><strong>打开雷电4设置</strong><br>勾选”一键超宽屏”和”一键高帧率”选项</p></li></ol><h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><p>如果安装后打不开模拟器，请按以下步骤操作：</p><ol start="4"><li><p><strong>替换雷电补丁</strong><br>找到网盘里的雷电补丁，替换到雷电模拟器的安装目录里</p></li><li><p><strong>替换配置文件</strong><br>把云盘里的customizeConfigs替换到雷电模拟器安装目录的VMS文件夹里</p></li><li><p><strong>模拟器设置</strong><br>按照以下图片配置模拟器设置：</p></li></ol><p>手机品牌：<code>vivo</code><br>手机型号：<code>V2218A</code><br><img src="https://tc.qxbl.pp.ua/mypic/%E5%9B%BE%E7%89%872.png" alt="模拟器设置2"><br><img src="https://tc.qxbl.pp.ua/mypic/%E5%9B%BE%E7%89%875.png" alt="模拟器设置3"><br><img src="https://tc.qxbl.pp.ua/mypic/%E5%9B%BE%E7%89%874.png" alt="模拟器设置4"></p><h2 id="使用教程"><a href="#使用教程" class="headerlink" title="使用教程"></a>使用教程</h2><ol start="7"><li><p><strong>安装游戏</strong><br>在模拟器里面安装游戏</p></li><li><p><strong>运行游戏</strong><br>点击模拟器右边按键即可选择对应英雄的连招脚本</p></li><li><p><strong>换装宏设置</strong><br>将以下换装代码分别添加到宏代码里面，按键可自定义</p></li></ol><h3 id="换装宏代码1"><a href="#换装宏代码1" class="headerlink" title="换装宏代码1"></a>换装宏代码1</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">size <span class="number">1920</span> <span class="number">900</span></span><br><span class="line">touch <span class="number">112</span> <span class="number">368</span> <span class="number">16</span> #打开商店（尾部<span class="number">16</span>表示该动作<span class="number">16</span>ms）</span><br><span class="line">wait <span class="number">80</span> #等待页面打开</span><br><span class="line">touch <span class="number">666</span> <span class="number">784</span> <span class="number">16</span> #选中第<span class="number">1</span>个装备(换其它装备自己改坐标)</span><br><span class="line">wait <span class="number">60</span></span><br><span class="line">touch <span class="number">1614</span> <span class="number">719</span> <span class="number">16</span> #卖掉</span><br><span class="line">wait <span class="number">60</span></span><br><span class="line">touch <span class="number">243</span> <span class="number">458</span> <span class="number">16</span> #跳到防御</span><br><span class="line">touch <span class="number">243</span> <span class="number">458</span> <span class="number">16</span> #跳到防御</span><br><span class="line">wait <span class="number">80</span></span><br><span class="line">touch <span class="number">603</span> <span class="number">634</span> <span class="number">16</span> #选中复活甲</span><br><span class="line">touch <span class="number">603</span> <span class="number">634</span> <span class="number">16</span> #选中复活甲</span><br><span class="line">wait <span class="number">60</span> #等待一小会</span><br><span class="line">touch <span class="number">1612</span> <span class="number">789</span> <span class="number">16</span> #购买</span><br><span class="line">wait <span class="number">60</span></span><br><span class="line">touch <span class="number">1667</span> <span class="number">81</span> <span class="number">16</span> #关闭</span><br></pre></td></tr></table></figure><h3 id="换装宏代码2"><a href="#换装宏代码2" class="headerlink" title="换装宏代码2"></a>换装宏代码2</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">size <span class="number">1920</span> <span class="number">900</span></span><br><span class="line">touch <span class="number">112</span> <span class="number">368</span> <span class="number">16</span> #打开商店（尾部<span class="number">16</span>表示该动作<span class="number">16</span>ms）</span><br><span class="line">wait <span class="number">80</span> #等待页面打开</span><br><span class="line">touch <span class="number">666</span> <span class="number">784</span> <span class="number">16</span> #选中第<span class="number">1</span>个装备(换其它装备自己改坐标)</span><br><span class="line">wait <span class="number">60</span></span><br><span class="line">touch <span class="number">1614</span> <span class="number">719</span> <span class="number">16</span> #卖掉</span><br><span class="line">wait <span class="number">60</span></span><br><span class="line">touch <span class="number">255</span> <span class="number">358</span> <span class="number">16</span> #跳到法术</span><br><span class="line">touch <span class="number">255</span> <span class="number">358</span> <span class="number">16</span> #跳到法术</span><br><span class="line">wait <span class="number">80</span></span><br><span class="line">touch <span class="number">593</span> <span class="number">395</span> <span class="number">16</span> #选中辉月</span><br><span class="line">touch <span class="number">593</span> <span class="number">395</span> <span class="number">16</span> #选中辉月</span><br><span class="line">wait <span class="number">60</span> #等待一小会</span><br><span class="line">touch <span class="number">1621</span> <span class="number">803</span> <span class="number">16</span> #购买</span><br><span class="line">wait <span class="number">60</span></span><br><span class="line">touch <span class="number">1666</span> <span class="number">79</span> <span class="number">16</span> #关闭</span><br></pre></td></tr></table></figure><h3 id="换装宏代码3"><a href="#换装宏代码3" class="headerlink" title="换装宏代码3"></a>换装宏代码3</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">size <span class="number">1920</span> <span class="number">900</span></span><br><span class="line">touch <span class="number">112</span> <span class="number">368</span> <span class="number">16</span> #打开商店（尾部<span class="number">16</span>表示该动作<span class="number">16</span>ms）</span><br><span class="line">wait <span class="number">80</span> #等待页面打开</span><br><span class="line">touch <span class="number">666</span> <span class="number">784</span> <span class="number">16</span> #选中第<span class="number">1</span>个装备(换其它装备自己改坐标)</span><br><span class="line">wait <span class="number">60</span></span><br><span class="line">touch <span class="number">1614</span> <span class="number">719</span> <span class="number">16</span> #卖掉</span><br><span class="line">wait <span class="number">60</span></span><br><span class="line">touch <span class="number">250</span> <span class="number">440</span> <span class="number">16</span> #跳到防御</span><br><span class="line">touch <span class="number">250</span> <span class="number">440</span> <span class="number">16</span> #跳到防御</span><br><span class="line">wait <span class="number">80</span></span><br><span class="line">touch <span class="number">833</span> <span class="number">396</span> <span class="number">16</span> #选中怒魂</span><br><span class="line">touch <span class="number">833</span> <span class="number">396</span> <span class="number">16</span> #选中怒魂</span><br><span class="line">wait <span class="number">60</span> #等待一小会</span><br><span class="line">touch <span class="number">1621</span> <span class="number">803</span> <span class="number">16</span> #购买</span><br><span class="line">wait <span class="number">60</span></span><br><span class="line">touch <span class="number">1666</span> <span class="number">79</span> <span class="number">16</span> #关闭</span><br></pre></td></tr></table></figure><h3 id="换装宏代码4"><a href="#换装宏代码4" class="headerlink" title="换装宏代码4"></a>换装宏代码4</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">size <span class="number">1920</span> <span class="number">900</span></span><br><span class="line">touch <span class="number">112</span> <span class="number">368</span> <span class="number">16</span> #打开商店（尾部<span class="number">16</span>表示该动作<span class="number">16</span>ms）</span><br><span class="line">wait <span class="number">80</span> #等待页面打开</span><br><span class="line">touch <span class="number">666</span> <span class="number">784</span> <span class="number">16</span> #选中第<span class="number">1</span>个装备(换其它装备自己改坐标)</span><br><span class="line">wait <span class="number">60</span></span><br><span class="line">touch <span class="number">1614</span> <span class="number">719</span> <span class="number">16</span> #卖掉</span><br><span class="line">wait <span class="number">60</span></span><br><span class="line">touch <span class="number">244</span> <span class="number">280</span> <span class="number">16</span> #跳到攻击</span><br><span class="line">touch <span class="number">244</span> <span class="number">280</span> <span class="number">16</span> #跳到攻击</span><br><span class="line">wait <span class="number">80</span></span><br><span class="line">touch <span class="number">593</span> <span class="number">393</span> <span class="number">16</span> #选中名刀</span><br><span class="line">touch <span class="number">593</span> <span class="number">393</span> <span class="number">16</span> #选中名刀</span><br><span class="line">wait <span class="number">60</span> #等待一小会</span><br><span class="line">touch <span class="number">1621</span> <span class="number">803</span> <span class="number">16</span> #购买</span><br><span class="line">wait <span class="number">60</span></span><br><span class="line">touch <span class="number">1666</span> <span class="number">79</span> <span class="number">16</span> #关闭</span><br></pre></td></tr></table></figure><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li>使用前请确保已关闭杀毒软件</li><li>坐标参数可根据实际屏幕分辨率调整</li><li>每个动作后的等待时间可根据网络延迟适当调整</li></ul><h2 id="价格信息"><a href="#价格信息" class="headerlink" title="价格信息"></a>价格信息</h2><table><thead><tr><th>套餐类型</th><th>价格</th></tr></thead><tbody><tr><td>月卡</td><td>15元</td></tr><tr><td>季卡</td><td>30元</td></tr><tr><td>年卡</td><td>100元</td></tr><tr><td>永久卡</td><td>188元</td></tr></tbody></table><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p><a href="https://www.123pan.com/s/zDM7jv-tjrF3.html">点击下载雷电4一键宏完整安装包</a><br>提取码：RRw2</p>]]></content>
      
      
      <categories>
          
          <category> 游戏工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 雷电模拟器 </tag>
            
            <tag> 宏脚本 </tag>
            
            <tag> 游戏辅助 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建指南</title>
      <link href="/2025/03/29/HexoBlogNo1/"/>
      <url>/2025/03/29/HexoBlogNo1/</url>
      
        <content type="html"><![CDATA[<p>本文介绍如何使用Hexo搭建个人博客并部署到GitHub Pages。</p><h2 id="Hexo简介"><a href="#Hexo简介" class="headerlink" title="Hexo简介"></a>Hexo简介</h2><p>Hexo是一个快速、简洁且高效的博客框架，基于Node.js开发。它将Markdown文档渲染成静态页面，非常适合构建技术博客。</p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><h2 id="创建博客文章"><a href="#创建博客文章" class="headerlink" title="创建博客文章"></a>创建博客文章</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;第一篇博客&quot;</span></span><br></pre></td></tr></table></figure><h2 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><h2 id="部署到GitHub-Pages"><a href="#部署到GitHub-Pages" class="headerlink" title="部署到GitHub Pages"></a>部署到GitHub Pages</h2><ol><li>配置_config.yml中的deploy设置</li><li>安装hexo-deployer-git插件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><ol start="3"><li>部署博客</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><p>访问<a href="https://yourname.github.io/">https://yourname.github.io</a>查看你的博客！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2025年免费VPS首选 - Claw Cloud详细评测与节点部署全攻略</title>
      <link href="/2024/08/10/Claw-Cloud-VPS-Tutorial/"/>
      <url>/2024/08/10/Claw-Cloud-VPS-Tutorial/</url>
      
        <content type="html"><![CDATA[<h1 id="2025年免费VPS首选-Claw-Cloud详细评测与节点部署全攻略"><a href="#2025年免费VPS首选-Claw-Cloud详细评测与节点部署全攻略" class="headerlink" title="2025年免费VPS首选 - Claw Cloud详细评测与节点部署全攻略"></a>2025年免费VPS首选 - Claw Cloud详细评测与节点部署全攻略</h1><!-- 请在发布前添加实际封面图片 --><!-- ![Claw Cloud封面](../images/claw-cloud-cover.jpg) --><p>大家好，今天给大家带来一篇超详细的教程，介绍一个<strong>真正免费且无需信用卡</strong>的VPS服务 - <strong>Claw Cloud</strong>。相比其他免费VPS，Claw Cloud在稳定性、速度和使用门槛上都有明显优势，非常适合新手入门和搭建各类轻量级服务。</p><h2 id="🌟-Claw-Cloud平台深度解析"><a href="#🌟-Claw-Cloud平台深度解析" class="headerlink" title="🌟 Claw Cloud平台深度解析"></a>🌟 Claw Cloud平台深度解析</h2><h3 id="💎-平台核心优势"><a href="#💎-平台核心优势" class="headerlink" title="💎 平台核心优势"></a>💎 平台核心优势</h3><ul><li><strong>无需信用卡</strong>：只需邮箱或GitHub账号即可注册</li><li><strong>注册奖励</strong>：直接获得$5美元初始额度</li><li><strong>持续福利</strong>：GitHub账号超过180天，每月可领$5美元</li><li><strong>配置灵活</strong>：支持多种轻量配置组合</li><li><strong>稳定可靠</strong>：服务器稳定性高，基本无断连现象</li><li><strong>速度优异</strong>：尤其是新加坡区域，对国内连接友好</li></ul><h3 id="📊-与其他免费VPS对比"><a href="#📊-与其他免费VPS对比" class="headerlink" title="📊 与其他免费VPS对比"></a>📊 与其他免费VPS对比</h3><table><thead><tr><th>平台</th><th>免费额度</th><th>需要信用卡</th><th>续期方式</th><th>稳定性</th><th>国内连通性</th></tr></thead><tbody><tr><td><strong>Claw Cloud</strong></td><td>$5&#x2F;月(可叠加)</td><td>❌否</td><td>GitHub账号绑定</td><td>⭐⭐⭐⭐</td><td>⭐⭐⭐⭐⭐</td></tr><tr><td>Oracle Cloud</td><td>总是免费资源</td><td>✅是</td><td>自动续期</td><td>⭐⭐⭐</td><td>⭐⭐</td></tr><tr><td>AWS Free Tier</td><td>12个月有限额度</td><td>✅是</td><td>不可续</td><td>⭐⭐⭐⭐⭐</td><td>⭐⭐⭐</td></tr><tr><td>GCP</td><td>$300&#x2F;90天</td><td>✅是</td><td>不可续</td><td>⭐⭐⭐⭐⭐</td><td>⭐⭐</td></tr></tbody></table><h2 id="📝-注册与获取免费额度完整指南"><a href="#📝-注册与获取免费额度完整指南" class="headerlink" title="📝 注册与获取免费额度完整指南"></a>📝 注册与获取免费额度完整指南</h2><h3 id="🔑-注册步骤"><a href="#🔑-注册步骤" class="headerlink" title="🔑 注册步骤"></a>🔑 注册步骤</h3><ol><li>访问 <a href="https://console.run.claw.cloud/signin?link=AD2IDH2EM9XY">Claw Cloud官网</a> </li><li>点击右上角”Sign Up”，选择以下任一方式注册:<ul><li>GitHub账号登录 (推荐，可获得每月福利)</li><li>邮箱注册</li></ul></li><li>完成邮箱验证</li><li>登录账号，导航至”Billing”查看初始$5美元额度</li></ol><h3 id="🎁-额外福利领取方法"><a href="#🎁-额外福利领取方法" class="headerlink" title="🎁 额外福利领取方法"></a>🎁 额外福利领取方法</h3><p>对于<strong>GitHub账号年龄≥180天</strong>的用户:</p><ol><li>在个人设置中绑定符合条件的GitHub账号</li><li>系统自动识别账号资格</li><li>每月自动发放$5美元额度</li><li>额度可累积使用，性价比极高</li></ol><blockquote><p>💡 <strong>小贴士</strong>: 请确保GitHub账号已完成邮箱验证，并设置了基本个人信息，提高绑定成功率。</p></blockquote><h2 id="🖥️-VPS创建与配置详解"><a href="#🖥️-VPS创建与配置详解" class="headerlink" title="🖥️ VPS创建与配置详解"></a>🖥️ VPS创建与配置详解</h2><h3 id="🎯-最佳区域选择"><a href="#🎯-最佳区域选择" class="headerlink" title="🎯 最佳区域选择"></a>🎯 最佳区域选择</h3><p>经过多次测试，<strong>新加坡(Singapore)区域</strong>对国内用户最友好:</p><ul><li>延迟低(平均60-100ms)</li><li>连通性好</li><li>速度稳定</li><li>适合各类应用部署</li></ul><h3 id="📋-创建VPS步骤详解"><a href="#📋-创建VPS步骤详解" class="headerlink" title="📋 创建VPS步骤详解"></a>📋 创建VPS步骤详解</h3><ol><li><p>登录控制台后，点击左侧菜单的”App Launchpad”</p></li><li><p>点击”Create App”按钮</p></li><li><p>在Image(镜像)输入框中输入:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">metaligh/3x-ui</span><br></pre></td></tr></table></figure></li><li><p>选择合适配置:</p><ul><li>CPU: <strong>1核</strong></li><li>内存: <strong>512MB</strong> (足够运行3x-ui)</li><li>磁盘: 默认即可</li><li>区域: <strong>Singapore</strong></li></ul></li><li><p>网络配置(重要):</p><ul><li>开启<strong>80端口</strong> (HTTP)</li><li>新增并开启<strong>2053端口</strong> (面板访问)</li><li>端口类型均选择<strong>Public</strong></li></ul></li><li><p>存储配置:</p><ul><li>点击”Add Volume”</li><li>添加两个本地挂载:</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/x-ui/</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/letsencrypt/</span><br></pre></td></tr></table></figure><ul><li>这样确保配置数据持久化保存</li></ul></li><li><p>点击”Deploy Application”开始部署</p></li></ol><blockquote><p>⚠️ <strong>注意</strong>: 确保所有端口都设为Public，否则将无法从外部访问服务！</p></blockquote><h3 id="🚦-部署状态监控"><a href="#🚦-部署状态监控" class="headerlink" title="🚦 部署状态监控"></a>🚦 部署状态监控</h3><ul><li>部署过程中状态显示为”Deploying”</li><li>约1-3分钟后变为”Running”表示部署成功</li><li>如超过5分钟仍未完成，可尝试刷新页面</li></ul><h2 id="🛠️-3x-ui面板配置与安全加固"><a href="#🛠️-3x-ui面板配置与安全加固" class="headerlink" title="🛠️ 3x-ui面板配置与安全加固"></a>🛠️ 3x-ui面板配置与安全加固</h2><h3 id="🔐-首次登录与密码修改"><a href="#🔐-首次登录与密码修改" class="headerlink" title="🔐 首次登录与密码修改"></a>🔐 首次登录与密码修改</h3><ol><li><p>复制2053端口对应的链接地址 (格式如: <code>http://xxx.claw.cloud:2053</code>)</p></li><li><p>浏览器访问该地址进入3x-ui管理面板</p></li><li><p>默认登录凭据:</p><ul><li>用户名: <code>admin</code></li><li>密码: <code>admin</code></li></ul></li><li><p><strong>立即修改密码步骤</strong> (强烈建议):</p><ul><li>点击左侧”系统设置”</li><li>修改用户名和密码字段</li><li>设置面板访问路径为随机字符串(提高安全性)</li><li>点击”确定”保存更改</li><li>使用新凭据重新登录</li></ul></li></ol><h3 id="🔧-面板功能与语言设置"><a href="#🔧-面板功能与语言设置" class="headerlink" title="🔧 面板功能与语言设置"></a>🔧 面板功能与语言设置</h3><ul><li>右上角支持多语言切换(简体中文&#x2F;English&#x2F;繁体等)</li><li>首页可查看系统状态与流量统计</li><li>“入站管理”用于创建和管理节点</li><li>“面板设置”可定制面板行为</li></ul><h2 id="🔄-节点部署方案-VLESS-WS-TLS"><a href="#🔄-节点部署方案-VLESS-WS-TLS" class="headerlink" title="🔄 节点部署方案 (VLESS + WS + TLS)"></a>🔄 节点部署方案 (VLESS + WS + TLS)</h2><h3 id="📊-协议选择建议"><a href="#📊-协议选择建议" class="headerlink" title="📊 协议选择建议"></a>📊 协议选择建议</h3><p>我推荐使用<strong>VLESS + WebSocket + TLS</strong>组合:</p><ul><li>相比VMESS更轻量高效</li><li>WebSocket确保连接稳定性</li><li>TLS加密保证数据安全</li><li>伪装性好，通过性强</li></ul><h3 id="🔧-节点创建详解"><a href="#🔧-节点创建详解" class="headerlink" title="🔧 节点创建详解"></a>🔧 节点创建详解</h3><ol><li><p>在3x-ui面板点击”入站管理” → “添加入站”</p></li><li><p>填写基本信息:</p><ul><li>备注: 给节点起个名字(如”SG-Node”)</li><li>开启: ✅ 勾选</li><li>协议: 选择 <strong>VLESS</strong></li><li>监听IP: 默认即可</li><li>端口: 修改为 <strong>443</strong> (推荐，https标准端口)</li></ul></li><li><p>VLESS设置:</p><ul><li>添加一个或多个客户端ID(自动生成UUID)</li><li>设置流控为”none”</li><li>加密选择”none”(VLESS本身不负责加密)</li></ul></li><li><p>传输配置:</p><ul><li>传输协议: 选择 <strong>ws</strong> (WebSocket)</li><li>路径: 设置一个随机路径(如: <code>/path123</code>)</li><li>域名: 填入VPS的公网域名或IP</li><li>开启TLS: ✅ 勾选</li><li>允许不安全连接: ❌ 不勾选</li></ul></li><li><p>TLS设置:</p><ul><li>证书来源: 选择”自签证书”(首次测试用)</li><li>若有域名，可选择”申请SSL证书”</li></ul></li><li><p>点击”添加”完成创建</p></li></ol><h3 id="📲-客户端配置"><a href="#📲-客户端配置" class="headerlink" title="📲 客户端配置"></a>📲 客户端配置</h3><ol><li>在入站列表找到刚创建的节点</li><li>点击”详情”→”导出链接”→”客户端分享链接”</li><li>复制生成的链接，用于客户端导入:<ul><li>v2rayN: 从剪贴板导入</li><li>Clash: 转换后导入</li><li>手机端: 扫描二维码导入</li></ul></li></ol><h2 id="📊-性能测试与实际体验分享"><a href="#📊-性能测试与实际体验分享" class="headerlink" title="📊 性能测试与实际体验分享"></a>📊 性能测试与实际体验分享</h2><h3 id="🚀-速度测试"><a href="#🚀-速度测试" class="headerlink" title="🚀 速度测试"></a>🚀 速度测试</h3><p>使用1核512MB配置的Claw Cloud新加坡节点实测:</p><ul><li><strong>YouTube</strong>: 4K视频无缓冲</li><li><strong>Netflix</strong>: 1080p流畅播放</li><li><strong>下载速度</strong>: 平均5-10MB&#x2F;s</li><li><strong>延迟</strong>: 60-100ms</li><li><strong>连通率</strong>: 99.5%以上</li></ul><h3 id="⏰-稳定性测试"><a href="#⏰-稳定性测试" class="headerlink" title="⏰ 稳定性测试"></a>⏰ 稳定性测试</h3><p>7天持续在线测试结果:</p><ul><li>无断连现象</li><li>无明显速度波动</li><li>高峰时段略有延迟增加(可接受范围)</li><li>重启后自动恢复服务</li></ul><h2 id="❓-常见问题与解决方案"><a href="#❓-常见问题与解决方案" class="headerlink" title="❓ 常见问题与解决方案"></a>❓ 常见问题与解决方案</h2><h3 id="🔍-部署失败问题"><a href="#🔍-部署失败问题" class="headerlink" title="🔍 部署失败问题"></a>🔍 部署失败问题</h3><p><strong>问题</strong>: 部署状态长时间显示”Error”<br><strong>解决</strong>:</p><ol><li>检查是否有足够额度</li><li>尝试更换区域部署</li><li>减少资源配置后重试</li><li>清空浏览器缓存后重新登录</li></ol><h3 id="🔄-节点无法连接"><a href="#🔄-节点无法连接" class="headerlink" title="🔄 节点无法连接"></a>🔄 节点无法连接</h3><p><strong>问题</strong>: 创建节点后客户端无法连接<br><strong>解决</strong>:</p><ol><li>确认所有端口都设为”Public”</li><li>检查防火墙设置是否正确</li><li>验证UUID填写无误</li><li>尝试更换端口号(如8443, 2096等)</li><li>关闭TLS尝试连接，排查证书问题</li></ol><h3 id="🐢-连接速度慢"><a href="#🐢-连接速度慢" class="headerlink" title="🐢 连接速度慢"></a>🐢 连接速度慢</h3><p><strong>问题</strong>: 节点连接成功但速度较慢<br><strong>解决</strong>:</p><ol><li>尝试更换传输协议(如改用TCP)</li><li>检查当前区域网络状况</li><li>减少加密强度提升速度</li><li>优化本地网络环境</li></ol><h2 id="🔥-进阶使用技巧"><a href="#🔥-进阶使用技巧" class="headerlink" title="🔥 进阶使用技巧"></a>🔥 进阶使用技巧</h2><h3 id="🛡️-增强安全性"><a href="#🛡️-增强安全性" class="headerlink" title="🛡️ 增强安全性"></a>🛡️ 增强安全性</h3><ol><li><p><strong>更换非标准端口</strong>:</p><ul><li>避免使用常见端口(22, 80, 443等)</li><li>推荐使用高位随机端口(如8080-65535范围)</li></ul></li><li><p><strong>启用防火墙</strong>:</p><ul><li>在VPS设置中仅开放必要端口</li><li>考虑使用fail2ban防止暴力破解</li></ul></li><li><p><strong>流量伪装</strong>:</p><ul><li>使用CDN进行流量转发</li><li>域名前置技术增强隐蔽性</li></ul></li></ol><h3 id="🚀-性能优化"><a href="#🚀-性能优化" class="headerlink" title="🚀 性能优化"></a>🚀 性能优化</h3><ol><li><p><strong>多协议负载均衡</strong>:</p><ul><li>同时部署多种协议(VLESS+Trojan)</li><li>根据网络情况智能切换</li></ul></li><li><p><strong>BBR加速</strong>:</p><ul><li>启用Google BBR拥塞控制算法</li><li>提升TCP连接效率</li></ul></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检查是否已启用BBR</span></span><br><span class="line">sysctl net.ipv4.tcp_congestion_control</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启用BBR</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;net.core.default_qdisc=fq&quot;</span> &gt;&gt; /etc/sysctl.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;net.ipv4.tcp_congestion_control=bbr&quot;</span> &gt;&gt; /etc/sysctl.conf</span><br><span class="line">sysctl -p</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>定时重启策略</strong>:<ul><li>设置面板定时重启任务</li><li>保持系统资源始终处于最佳状态</li></ul></li></ol><h2 id="📚-总结与建议"><a href="#📚-总结与建议" class="headerlink" title="📚 总结与建议"></a>📚 总结与建议</h2><p>Claw Cloud提供的免费VPS方案无疑是2025年最值得推荐的选择之一，尤其适合:</p><ul><li>🔰 <strong>新手入门</strong>: 无需信用卡，操作简单直观</li><li>💻 <strong>轻量应用</strong>: 个人博客、小型网站、API服务</li><li>🌐 <strong>节点部署</strong>: 稳定流畅，设置简便</li><li>🧪 <strong>技术实验</strong>: 测试环境搭建，技术学习</li></ul><p>最佳实践建议:</p><ol><li>定期备份配置数据</li><li>遵循最小权限原则配置服务</li><li>适度使用资源，避免滥用</li><li>绑定符合条件的GitHub账号以获得持续福利</li></ol><p>希望这篇教程对你有所帮助！如果你在使用过程中遇到任何问题，欢迎在评论区留言交流。</p><hr><blockquote><p>本文系原创内容，采用CC BY-NC-ND 4.0协议，未经授权禁止转载。<br>文章内容仅供学习交流，请合法合规使用服务。 </p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> VPS </category>
          
          <category> 节点 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 免费VPS </tag>
            
            <tag> Claw Cloud </tag>
            
            <tag> 节点部署 </tag>
            
            <tag> 3x-ui </tag>
            
            <tag> 白嫖 </tag>
            
            <tag> 保姆级教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多源爬取代理 IP (最少 5000 + 代理)</title>
      <link href="/2024/06/10/%E5%A4%9A%E6%BA%90%E7%88%AC%E5%8F%96%E4%BB%A3%E7%90%86IP-%E6%9C%80%E5%B0%915000+%E4%BB%A3%E7%90%86/"/>
      <url>/2024/06/10/%E5%A4%9A%E6%BA%90%E7%88%AC%E5%8F%96%E4%BB%A3%E7%90%86IP-%E6%9C%80%E5%B0%915000+%E4%BB%A3%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="多源爬取代理-IP-最少-5000-代理"><a href="#多源爬取代理-IP-最少-5000-代理" class="headerlink" title="多源爬取代理 IP (最少 5000+ 代理)"></a>多源爬取代理 IP (最少 5000+ 代理)</h1><p>本项目通过多站点并发爬取、去重、检测和验证，快速获取大量可用代理 IP，适合爬虫、数据采集等场景。</p><h2 id="依赖环境"><a href="#依赖环境" class="headerlink" title="依赖环境"></a>依赖环境</h2><ul><li>Python 3.7+</li><li>requests</li><li>beautifulsoup4</li><li>fake_useragent</li><li>pysocks</li><li>concurrent.futures（标准库自带）</li></ul><p>安装依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install requests beautifulsoup4 fake-useragent pysocks</span><br></pre></td></tr></table></figure><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><ol><li>将代码保存为 <code>proxy_spider.py</code>，或直接在 Jupyter&#x2F;命令行环境运行。</li><li>运行脚本：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python proxy_spider.py</span><br></pre></td></tr></table></figure></li><li>按提示输入需要的代理数量、输出格式（json&#x2F;txt）、是否检测地区&#x2F;类型&#x2F;HTTPS、是否仅输出 IP。</li><li>结果会自动保存为 <code>unfiltered_proxies_*.json/txt</code> 和 <code>valid_proxies_*.json/txt</code> 文件。</li></ol><h2 id="主要功能说明"><a href="#主要功能说明" class="headerlink" title="主要功能说明"></a>主要功能说明</h2><ul><li><strong>多源采集</strong>：支持 7 个主流免费代理网站&#x2F;API，自动并发爬取。</li><li><strong>去重处理</strong>：自动去除重复代理。</li><li><strong>信息补全</strong>：可选检测代理地区、类型、HTTPS 支持。</li><li><strong>可用性验证</strong>：多线程验证代理有效性。</li><li><strong>多格式输出</strong>：支持 json、txt，且可选仅输出 IP:PORT。</li></ul><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li>代理网站偶有失效，部分站点可能因反爬限制导致获取数量波动。</li><li>检测地区和类型会显著增加检测时间，建议仅在需要时开启。</li><li>验证代理有效性时，部分代理可能因网络波动偶尔误判。</li><li>建议定期更新依赖库，避免 UserAgent 失效。</li></ul><h2 id="运行效果示例"><a href="#运行效果示例" class="headerlink" title="运行效果示例"></a>运行效果示例</h2><ul><li><p>终端输出示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">🌟 多源代理 IP 爬虫 v3.0</span><br><span class="line">正在爬取 freeproxylist 第 1 页...</span><br><span class="line">...</span><br><span class="line">📦 共获取到 5230 个唯一代理</span><br><span class="line">请输入你需要的代理数量（直接回车代表全部）：1000</span><br><span class="line">请选择未过滤代理 IP 的输出格式 (json/txt): txt</span><br><span class="line">是否需要检测代理 IP 的地区信息？(y/n): n</span><br><span class="line">是否需要检测代理类型？(y/n): n</span><br><span class="line">是否需要检测是否支持 HTTPS？(y/n): n</span><br><span class="line">🔍 正在分析代理信息...</span><br><span class="line">⚡ 正在验证代理可用性...</span><br><span class="line">请选择有效代理 IP 的输出格式 (json/txt): txt</span><br><span class="line">是否仅输出代理 IP，每行一个代理？(y/n): y</span><br><span class="line">🎉 找到 312 个有效代理，已保存到 valid_proxies_20240610123456.txt</span><br></pre></td></tr></table></figure></li><li><p>输出文件内容示例（仅 IP 模式）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.2.3.4:8080</span><br><span class="line">5.6.7.8:3128</span><br><span class="line">...</span><br></pre></td></tr></table></figure></li></ul><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><ul><li><strong>Q: 代理数量不够怎么办？</strong><br>A: 可适当增大采集页数或更换代理源，或多运行几次。</li><li><strong>Q: 代理验证很慢？</strong><br>A: 检查网络环境，或减少检测项（如地区、类型）。</li><li><strong>Q: 输出乱码？</strong><br>A: 请确保文件编码为 UTF-8。</li></ul><hr><p>以下为完整代码：<br> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> socks</span><br><span class="line"><span class="keyword">from</span> fake_useragent <span class="keyword">import</span> UserAgent</span><br><span class="line"><span class="keyword">import</span> concurrent.futures</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化配置</span></span><br><span class="line">ua = UserAgent()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 代理网站配置</span></span><br><span class="line">SITE_CONFIGS = &#123;</span><br><span class="line"><span class="string">&#x27;proxy_scdn&#x27;</span>: &#123;</span><br><span class="line"><span class="string">&#x27;url&#x27;</span>: <span class="string">&#x27;https://proxy.scdn.io/text.php&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;api&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;parser&#x27;</span>: <span class="string">&#x27;pre&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;extractor&#x27;</span>: <span class="keyword">lambda</span> text: [</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&#x27;ip&#x27;</span>: line.split(<span class="string">&#x27;:&#x27;</span>)[<span class="number">0</span>],</span><br><span class="line"><span class="string">&#x27;port&#x27;</span>: line.split(<span class="string">&#x27;:&#x27;</span>)[<span class="number">1</span>].strip(),</span><br><span class="line"><span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;待检测&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;https&#x27;</span>: <span class="string">&#x27;待检测&#x27;</span></span><br><span class="line">&#125; <span class="keyword">for</span> line <span class="keyword">in</span> text.split(<span class="string">&#x27;\n&#x27;</span>) <span class="keyword">if</span> <span class="string">&#x27;:&#x27;</span> <span class="keyword">in</span> line</span><br><span class="line">]</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&#x27;freeproxylist&#x27;</span>: &#123;</span><br><span class="line"><span class="string">&#x27;url&#x27;</span>: <span class="string">&#x27;https://free-proxy-list.net/&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;web&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;parser&#x27;</span>: <span class="string">&#x27;table.table tbody tr&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;extractor&#x27;</span>: <span class="keyword">lambda</span> row: &#123;</span><br><span class="line"><span class="string">&#x27;ip&#x27;</span>: row.find_all(<span class="string">&#x27;td&#x27;</span>)[<span class="number">0</span>].get_text() <span class="keyword">if</span> <span class="built_in">len</span>(row.find_all(<span class="string">&#x27;td&#x27;</span>)) &gt; <span class="number">0</span> <span class="keyword">else</span> <span class="literal">None</span>,</span><br><span class="line"><span class="string">&#x27;port&#x27;</span>: row.find_all(<span class="string">&#x27;td&#x27;</span>)[<span class="number">1</span>].get_text() <span class="keyword">if</span> <span class="built_in">len</span>(row.find_all(<span class="string">&#x27;td&#x27;</span>)) &gt; <span class="number">1</span> <span class="keyword">else</span> <span class="literal">None</span>,</span><br><span class="line"><span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;SOCKS5&#x27;</span> <span class="keyword">if</span> <span class="string">&#x27;socks&#x27;</span> <span class="keyword">in</span> (</span><br><span class="line">row.find_all(<span class="string">&#x27;td&#x27;</span>)[<span class="number">4</span>].get_text().lower() <span class="keyword">if</span> <span class="built_in">len</span>(row.find_all(<span class="string">&#x27;td&#x27;</span>)) &gt; <span class="number">4</span> <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span>) <span class="keyword">else</span> <span class="string">&#x27;HTTP&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;https&#x27;</span>: <span class="string">&#x27;支持&#x27;</span> <span class="keyword">if</span> <span class="string">&#x27;yes&#x27;</span> <span class="keyword">in</span> (</span><br><span class="line">row.find_all(<span class="string">&#x27;td&#x27;</span>)[<span class="number">6</span>].get_text().lower() <span class="keyword">if</span> <span class="built_in">len</span>(row.find_all(<span class="string">&#x27;td&#x27;</span>)) &gt; <span class="number">6</span> <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span>) <span class="keyword">else</span> <span class="string">&#x27;不支持&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&#x27;proxy_list_plus&#x27;</span>: &#123;</span><br><span class="line"><span class="string">&#x27;url&#x27;</span>: <span class="string">&#x27;https://list.proxylistplus.com/Fresh-HTTP-Proxy-List-&#123;page&#125;&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;pages&#x27;</span>: <span class="number">5</span>,</span><br><span class="line"><span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;web&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;parser&#x27;</span>: <span class="string">&#x27;table.bg tr.cells&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;extractor&#x27;</span>: <span class="keyword">lambda</span> row: &#123;</span><br><span class="line"><span class="string">&#x27;ip&#x27;</span>: row.find_all(<span class="string">&#x27;td&#x27;</span>)[<span class="number">1</span>].get_text(),</span><br><span class="line"><span class="string">&#x27;port&#x27;</span>: row.find_all(<span class="string">&#x27;td&#x27;</span>)[<span class="number">2</span>].get_text(),</span><br><span class="line"><span class="string">&#x27;type&#x27;</span>: row.find_all(<span class="string">&#x27;td&#x27;</span>)[<span class="number">6</span>].get_text(),</span><br><span class="line"><span class="string">&#x27;https&#x27;</span>: <span class="string">&#x27;支持&#x27;</span> <span class="keyword">if</span> <span class="string">&#x27;yes&#x27;</span> <span class="keyword">in</span> row.find_all(<span class="string">&#x27;td&#x27;</span>)[<span class="number">5</span>].get_text().lower() <span class="keyword">else</span> <span class="string">&#x27;不支持&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&#x27;geonode&#x27;</span>: &#123;</span><br><span class="line"><span class="string">&#x27;url&#x27;</span>: <span class="string">&#x27;https://proxylist.geonode.com/api/proxy-list?limit=100&amp;page=&#123;page&#125;&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;pages&#x27;</span>: <span class="number">5</span>,</span><br><span class="line"><span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;api&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;extractor&#x27;</span>: <span class="keyword">lambda</span> data: [</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&#x27;ip&#x27;</span>: item[<span class="string">&#x27;ip&#x27;</span>],</span><br><span class="line"><span class="string">&#x27;port&#x27;</span>: item[<span class="string">&#x27;port&#x27;</span>],</span><br><span class="line"><span class="string">&#x27;type&#x27;</span>: item[<span class="string">&#x27;protocols&#x27;</span>][<span class="number">0</span>].upper(),</span><br><span class="line"><span class="string">&#x27;https&#x27;</span>: <span class="string">&#x27;支持&#x27;</span> <span class="keyword">if</span> <span class="string">&#x27;https&#x27;</span> <span class="keyword">in</span> item[<span class="string">&#x27;protocols&#x27;</span>] <span class="keyword">else</span> <span class="string">&#x27;不支持&#x27;</span></span><br><span class="line">&#125; <span class="keyword">for</span> item <span class="keyword">in</span> data[<span class="string">&#x27;data&#x27;</span>]</span><br><span class="line">]</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&#x27;89ip&#x27;</span>: &#123;</span><br><span class="line"><span class="string">&#x27;url&#x27;</span>: <span class="string">&#x27;https://www.89ip.cn/index_&#123;page&#125;.html&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;pages&#x27;</span>: <span class="number">5</span>,</span><br><span class="line"><span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;web&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;parser&#x27;</span>: <span class="string">&#x27;table.layui-table tbody tr&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;extractor&#x27;</span>: <span class="keyword">lambda</span> row: &#123;</span><br><span class="line"><span class="string">&#x27;ip&#x27;</span>: row.find_all(<span class="string">&#x27;td&#x27;</span>)[<span class="number">0</span>].get_text().strip(),</span><br><span class="line"><span class="string">&#x27;port&#x27;</span>: row.find_all(<span class="string">&#x27;td&#x27;</span>)[<span class="number">1</span>].get_text().strip(),</span><br><span class="line"><span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;HTTP&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;https&#x27;</span>: <span class="string">&#x27;待检测&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&#x27;proxyscrape&#x27;</span>: &#123;</span><br><span class="line"><span class="string">&#x27;url&#x27;</span>: <span class="string">&#x27;https://api.proxyscrape.com/v2/?request=getproxies&amp;protocol=http&amp;timeout=10000&amp;country=all&amp;ssl=all&amp;anonymity=all&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;api&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;extractor&#x27;</span>: <span class="keyword">lambda</span> text: [</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&#x27;ip&#x27;</span>: line.split(<span class="string">&#x27;:&#x27;</span>)[<span class="number">0</span>],</span><br><span class="line"><span class="string">&#x27;port&#x27;</span>: line.split(<span class="string">&#x27;:&#x27;</span>)[<span class="number">1</span>].strip(),</span><br><span class="line"><span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;HTTP&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;https&#x27;</span>: <span class="string">&#x27;待检测&#x27;</span></span><br><span class="line">&#125; <span class="keyword">for</span> line <span class="keyword">in</span> text.split(<span class="string">&#x27;\n&#x27;</span>) <span class="keyword">if</span> <span class="string">&#x27;:&#x27;</span> <span class="keyword">in</span> line</span><br><span class="line">]</span><br><span class="line">&#125;,</span><br><span class="line"><span class="string">&#x27;sslproxies&#x27;</span>: &#123;</span><br><span class="line"><span class="string">&#x27;url&#x27;</span>: <span class="string">&#x27;https://www.sslproxies.org/&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;web&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;parser&#x27;</span>: <span class="string">&#x27;table.table tbody tr&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;extractor&#x27;</span>: <span class="keyword">lambda</span> row: &#123;</span><br><span class="line"><span class="string">&#x27;ip&#x27;</span>: row.find_all(<span class="string">&#x27;td&#x27;</span>)[<span class="number">0</span>].get_text() <span class="keyword">if</span> <span class="built_in">len</span>(row.find_all(<span class="string">&#x27;td&#x27;</span>)) &gt; <span class="number">0</span> <span class="keyword">else</span> <span class="literal">None</span>,</span><br><span class="line"><span class="string">&#x27;port&#x27;</span>: row.find_all(<span class="string">&#x27;td&#x27;</span>)[<span class="number">1</span>].get_text() <span class="keyword">if</span> <span class="built_in">len</span>(row.find_all(<span class="string">&#x27;td&#x27;</span>)) &gt; <span class="number">1</span> <span class="keyword">else</span> <span class="literal">None</span>,</span><br><span class="line"><span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;HTTPS&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;https&#x27;</span>: <span class="string">&#x27;支持&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测地区</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">detect_region</span>(<span class="params">ip: <span class="built_in">str</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">max_retries = <span class="number">3</span></span><br><span class="line">retries = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> retries &lt; max_retries:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">api_url = <span class="string">f&quot;https://apimobile.meituan.com/locate/v2/ip/loc?rgeo=true&amp;ip=<span class="subst">&#123;ip&#125;</span>&quot;</span></span><br><span class="line">response = requests.get(api_url, timeout=<span class="number">5</span>)</span><br><span class="line">data = response.json()</span><br><span class="line">rgeo = data.get(<span class="string">&#x27;data&#x27;</span>, &#123;&#125;).get(<span class="string">&#x27;rgeo&#x27;</span>, &#123;&#125;)</span><br><span class="line">country = rgeo.get(<span class="string">&#x27;country&#x27;</span>, <span class="string">&#x27;未知&#x27;</span>)</span><br><span class="line">province = rgeo.get(<span class="string">&#x27;province&#x27;</span>, <span class="string">&#x27;未知&#x27;</span>)</span><br><span class="line">city = rgeo.get(<span class="string">&#x27;city&#x27;</span>, <span class="string">&#x27;未知&#x27;</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;country&#125;</span>/<span class="subst">&#123;province&#125;</span>/<span class="subst">&#123;city&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">except</span> (requests.RequestException, json.JSONDecodeError):</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;检测 IP <span class="subst">&#123;ip&#125;</span> 地区信息失败，尝试第 <span class="subst">&#123;retries + <span class="number">1</span>&#125;</span> 次重试&quot;</span>)</span><br><span class="line">retries += <span class="number">1</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;未知&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检测代理类型</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">detect_proxy_type</span>(<span class="params">proxy: <span class="built_in">str</span></span>) -&gt; <span class="built_in">str</span>:</span><br><span class="line">ip, port = proxy.split(<span class="string">&#x27;:&#x27;</span>)</span><br><span class="line">test_urls = [</span><br><span class="line">(<span class="string">&#x27;http://httpbin.org/ip&#x27;</span>, <span class="string">&#x27;HTTP&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;https://httpbin.org/ip&#x27;</span>, <span class="string">&#x27;HTTPS&#x27;</span>)</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> url, ptype <span class="keyword">in</span> test_urls:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">proxies = &#123;ptype.lower(): <span class="string">f&#x27;<span class="subst">&#123;ptype.lower()&#125;</span>://<span class="subst">&#123;proxy&#125;</span>&#x27;</span>&#125;</span><br><span class="line">res = requests.get(url, proxies=proxies, timeout=<span class="number">5</span>)</span><br><span class="line"><span class="keyword">if</span> res.status_code == <span class="number">200</span>:</span><br><span class="line"><span class="keyword">return</span> ptype</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">socks.set_default_proxy(socks.SOCKS5, ip, <span class="built_in">int</span>(port))</span><br><span class="line">socket.socket = socks.socksocket</span><br><span class="line">res = requests.get(<span class="string">&#x27;http://httpbin.org/ip&#x27;</span>, timeout=<span class="number">5</span>)</span><br><span class="line"><span class="keyword">if</span> res.status_code == <span class="number">200</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;SOCKS5&#x27;</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="string">&#x27;未知&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 核心爬取逻辑</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_proxies_from_site</span>(<span class="params">site: <span class="built_in">str</span></span>) -&gt; <span class="built_in">list</span>:</span><br><span class="line">config = SITE_CONFIGS[site]</span><br><span class="line">all_proxies = []</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"><span class="keyword">for</span> page <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, config.get(<span class="string">&#x27;pages&#x27;</span>, <span class="number">1</span>) + <span class="number">1</span>):</span><br><span class="line">headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>: ua.random&#125;</span><br><span class="line">url = config[<span class="string">&#x27;url&#x27;</span>].<span class="built_in">format</span>(page=page) <span class="keyword">if</span> <span class="string">&#x27;&#123;page&#125;&#x27;</span> <span class="keyword">in</span> config[<span class="string">&#x27;url&#x27;</span>] <span class="keyword">else</span> config[<span class="string">&#x27;url&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;正在爬取 <span class="subst">&#123;site&#125;</span> 第 <span class="subst">&#123;page&#125;</span> 页...&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> config[<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;api&#x27;</span>:</span><br><span class="line">response = requests.get(url, headers=headers, timeout=<span class="number">10</span>)</span><br><span class="line"><span class="keyword">if</span> site <span class="keyword">in</span> [<span class="string">&#x27;proxy_scdn&#x27;</span>, <span class="string">&#x27;proxyscrape&#x27;</span>]:</span><br><span class="line">text = response.text</span><br><span class="line">proxies = config[<span class="string">&#x27;extractor&#x27;</span>](text)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">data = response.json()</span><br><span class="line">proxies = config[<span class="string">&#x27;extractor&#x27;</span>](data)</span><br><span class="line"><span class="keyword">except</span> json.JSONDecodeError:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;警告：<span class="subst">&#123;site&#125;</span> 第 <span class="subst">&#123;page&#125;</span> 页返回的数据格式有误，跳过此页。&quot;</span>)</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">response = requests.get(url, headers=headers, timeout=<span class="number">10</span>)</span><br><span class="line">soup = BeautifulSoup(response.text, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">rows = soup.select(config[<span class="string">&#x27;parser&#x27;</span>])</span><br><span class="line">proxies = [config[<span class="string">&#x27;extractor&#x27;</span>](row) <span class="keyword">for</span> row <span class="keyword">in</span> rows <span class="keyword">if</span> <span class="built_in">len</span>(row.find_all(<span class="string">&#x27;td&#x27;</span>)) &gt;= <span class="number">2</span>]</span><br><span class="line">all_proxies.extend([proxy <span class="keyword">for</span> proxy <span class="keyword">in</span> proxies <span class="keyword">if</span> proxy[<span class="string">&#x27;ip&#x27;</span>] <span class="keyword">and</span> proxy[<span class="string">&#x27;port&#x27;</span>]])</span><br><span class="line">time.sleep(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;site&#125;</span> 爬取失败: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line"><span class="keyword">return</span> all_proxies</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存代理</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save_proxies</span>(<span class="params">proxies, format_type, filename, only_ip=<span class="literal">False</span></span>):</span><br><span class="line"><span class="keyword">if</span> format_type == <span class="string">&#x27;json&#x27;</span>:</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">json.dump(proxies, f, ensure_ascii=<span class="literal">False</span>, indent=<span class="number">4</span>)</span><br><span class="line"><span class="keyword">elif</span> format_type == <span class="string">&#x27;txt&#x27;</span>:</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line"><span class="keyword">if</span> only_ip:</span><br><span class="line"><span class="keyword">for</span> proxy <span class="keyword">in</span> proxies:</span><br><span class="line">f.write(<span class="string">f&quot;<span class="subst">&#123;proxy[<span class="string">&#x27;ip&#x27;</span>]&#125;</span>:<span class="subst">&#123;proxy[<span class="string">&#x27;port&#x27;</span>]&#125;</span>\n&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">f.write(<span class="string">&quot;地区 | 类型 | HTTPS | 代理地址\n&quot;</span>)</span><br><span class="line">f.write(<span class="string">&quot;-&quot;</span> * <span class="number">50</span> + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> proxies:</span><br><span class="line">p[<span class="string">&#x27;addr&#x27;</span>] = <span class="string">f&quot;<span class="subst">&#123;p[<span class="string">&#x27;ip&#x27;</span>]&#125;</span>:<span class="subst">&#123;p[<span class="string">&#x27;port&#x27;</span>]&#125;</span>&quot;</span></span><br><span class="line">f.write(<span class="string">f&quot;<span class="subst">&#123;p.get(<span class="string">&#x27;region&#x27;</span>, <span class="string">&#x27;未知&#x27;</span>)&#125;</span> | <span class="subst">&#123;p[<span class="string">&#x27;type&#x27;</span>]&#125;</span> | <span class="subst">&#123;p[<span class="string">&#x27;https&#x27;</span>]&#125;</span> | <span class="subst">&#123;p[<span class="string">&#x27;addr&#x27;</span>]&#125;</span>\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证代理可用性</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">validate_proxy</span>(<span class="params">proxy</span>):</span><br><span class="line">max_retries = <span class="number">3</span></span><br><span class="line">retries = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> retries &lt; max_retries:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">test_url = <span class="string">&#x27;http://httpbin.org/ip&#x27;</span></span><br><span class="line">proxy[<span class="string">&#x27;addr&#x27;</span>] = <span class="string">f&quot;<span class="subst">&#123;proxy[<span class="string">&#x27;ip&#x27;</span>]&#125;</span>:<span class="subst">&#123;proxy[<span class="string">&#x27;port&#x27;</span>]&#125;</span>&quot;</span></span><br><span class="line">proxies = &#123;proxy[<span class="string">&#x27;type&#x27;</span>].lower(): <span class="string">f&quot;<span class="subst">&#123;proxy[<span class="string">&#x27;type&#x27;</span>].lower()&#125;</span>://<span class="subst">&#123;proxy[<span class="string">&#x27;addr&#x27;</span>]&#125;</span>&quot;</span>&#125;</span><br><span class="line">timeout = <span class="number">5</span> <span class="keyword">if</span> proxy[<span class="string">&#x27;type&#x27;</span>] <span class="keyword">in</span> [<span class="string">&#x27;HTTP&#x27;</span>, <span class="string">&#x27;HTTPS&#x27;</span>] <span class="keyword">else</span> <span class="number">10</span></span><br><span class="line">response = requests.get(test_url, proxies=proxies, timeout=timeout)</span><br><span class="line"><span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;代理 <span class="subst">&#123;proxy[<span class="string">&#x27;addr&#x27;</span>]&#125;</span> 验证通过，类型: <span class="subst">&#123;proxy[<span class="string">&#x27;type&#x27;</span>]&#125;</span>，是否支持 HTTPS: <span class="subst">&#123;proxy[<span class="string">&#x27;https&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line"><span class="keyword">return</span> proxy</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;代理 <span class="subst">&#123;proxy[<span class="string">&#x27;addr&#x27;</span>]&#125;</span> 验证失败，尝试第 <span class="subst">&#123;retries + <span class="number">1</span>&#125;</span> 次重试&quot;</span>)</span><br><span class="line"><span class="keyword">except</span> requests.RequestException <span class="keyword">as</span> e:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;代理 <span class="subst">&#123;proxy[<span class="string">&#x27;addr&#x27;</span>]&#125;</span> 验证失败，错误信息: <span class="subst">&#123;e&#125;</span>，尝试第 <span class="subst">&#123;retries + <span class="number">1</span>&#125;</span> 次重试&quot;</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;代理 <span class="subst">&#123;proxy[<span class="string">&#x27;addr&#x27;</span>]&#125;</span> 验证失败，未知错误: <span class="subst">&#123;e&#125;</span>，尝试第 <span class="subst">&#123;retries + <span class="number">1</span>&#125;</span> 次重试&quot;</span>)</span><br><span class="line">retries += <span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;代理 <span class="subst">&#123;proxy[<span class="string">&#x27;addr&#x27;</span>]&#125;</span> 验证失败，达到最大重试次数&quot;</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 补充代理信息</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">analyze_proxy</span>(<span class="params">proxy, check_region, check_type, check_https</span>):</span><br><span class="line">proxy[<span class="string">&#x27;addr&#x27;</span>] = <span class="string">f&quot;<span class="subst">&#123;proxy[<span class="string">&#x27;ip&#x27;</span>]&#125;</span>:<span class="subst">&#123;proxy[<span class="string">&#x27;port&#x27;</span>]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">if</span> check_region <span class="keyword">and</span> proxy.get(<span class="string">&#x27;region&#x27;</span>) <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">proxy[<span class="string">&#x27;region&#x27;</span>] = detect_region(proxy[<span class="string">&#x27;ip&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;代理 <span class="subst">&#123;proxy[<span class="string">&#x27;addr&#x27;</span>]&#125;</span> 地区检测结果: <span class="subst">&#123;proxy[<span class="string">&#x27;region&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> check_type <span class="keyword">and</span> proxy[<span class="string">&#x27;type&#x27;</span>] <span class="keyword">in</span> [<span class="string">&#x27;待检测&#x27;</span>, <span class="string">&#x27;未知&#x27;</span>]:</span><br><span class="line">proxy[<span class="string">&#x27;type&#x27;</span>] = detect_proxy_type(proxy[<span class="string">&#x27;addr&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;代理 <span class="subst">&#123;proxy[<span class="string">&#x27;addr&#x27;</span>]&#125;</span> 类型检测结果: <span class="subst">&#123;proxy[<span class="string">&#x27;type&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> check_https <span class="keyword">and</span> proxy[<span class="string">&#x27;https&#x27;</span>] == <span class="string">&#x27;待检测&#x27;</span>:</span><br><span class="line">proxy[<span class="string">&#x27;https&#x27;</span>] = <span class="string">&#x27;支持&#x27;</span> <span class="keyword">if</span> proxy[<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;HTTPS&#x27;</span> <span class="keyword">else</span> <span class="string">&#x27;不支持&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;代理 <span class="subst">&#123;proxy[<span class="string">&#x27;addr&#x27;</span>]&#125;</span> 是否支持 HTTPS 检测结果: <span class="subst">&#123;proxy[<span class="string">&#x27;https&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line"><span class="keyword">return</span> proxy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 主程序</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;=&quot;</span> * <span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;🌟 多源代理 IP 爬虫 v3.0&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;=&quot;</span> * <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 爬取所有代理</span></span><br><span class="line">all_proxies = []</span><br><span class="line"><span class="keyword">with</span> concurrent.futures.ThreadPoolExecutor(max_workers=<span class="number">6</span>) <span class="keyword">as</span> executor:</span><br><span class="line">futures = &#123;executor.submit(get_proxies_from_site, site): site <span class="keyword">for</span> site <span class="keyword">in</span> SITE_CONFIGS&#125;</span><br><span class="line"><span class="keyword">for</span> future <span class="keyword">in</span> concurrent.futures.as_completed(futures):</span><br><span class="line">site = futures[future]</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">proxies = future.result()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;从 <span class="subst">&#123;site&#125;</span> 获取到 <span class="subst">&#123;<span class="built_in">len</span>(proxies)&#125;</span> 个代理&quot;</span>)</span><br><span class="line">all_proxies.extend(proxies)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;site&#125;</span> 爬取异常: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去重</span></span><br><span class="line">unique_proxies = []</span><br><span class="line">seen = <span class="built_in">set</span>()</span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> all_proxies:</span><br><span class="line">key = <span class="string">f&quot;<span class="subst">&#123;p[<span class="string">&#x27;ip&#x27;</span>]&#125;</span>:<span class="subst">&#123;p[<span class="string">&#x27;port&#x27;</span>]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">if</span> key <span class="keyword">not</span> <span class="keyword">in</span> seen:</span><br><span class="line">seen.add(key)</span><br><span class="line">unique_proxies.append(p)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;\n📦 共获取到 <span class="subst">&#123;<span class="built_in">len</span>(unique_proxies)&#125;</span> 个唯一代理&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 询问用户需要多少代理</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">input_num = <span class="built_in">input</span>(<span class="string">&quot;请输入你需要的代理数量（直接回车代表全部）：&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> input_num == <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">selected_proxies = unique_proxies</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">num = <span class="built_in">int</span>(input_num)</span><br><span class="line"><span class="keyword">if</span> num &gt; <span class="built_in">len</span>(unique_proxies):</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;输入的数量超过了可用代理数量，可用代理数量为 <span class="subst">&#123;<span class="built_in">len</span>(unique_proxies)&#125;</span>，请重新输入。&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">selected_proxies = unique_proxies[:num]</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">except</span> ValueError:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;输入无效，请输入一个有效的整数或直接回车。&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取当前时间</span></span><br><span class="line">current_time = datetime.now().strftime(<span class="string">&quot;%Y%m%d%H%M%S&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存未过滤的代理 IP</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">format_choice = <span class="built_in">input</span>(<span class="string">&quot;请选择未过滤代理 IP 的输出格式 (json/txt): &quot;</span>).strip().lower()</span><br><span class="line"><span class="keyword">if</span> format_choice <span class="keyword">in</span> [<span class="string">&#x27;json&#x27;</span>, <span class="string">&#x27;txt&#x27;</span>]:</span><br><span class="line">unfiltered_filename = <span class="string">f&#x27;unfiltered_proxies_<span class="subst">&#123;current_time&#125;</span>.<span class="subst">&#123;format_choice&#125;</span>&#x27;</span></span><br><span class="line">save_proxies(selected_proxies, format_choice, unfiltered_filename, <span class="literal">False</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;未过滤的代理 IP 已保存为 <span class="subst">&#123;unfiltered_filename&#125;</span>&quot;</span>)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;输入无效，请输入 &#x27;json&#x27; 或 &#x27;txt&#x27;。&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 询问检测选项</span></span><br><span class="line">check_region = <span class="built_in">input</span>(<span class="string">&quot;是否需要检测代理 IP 的地区信息？(y/n): &quot;</span>).strip().lower() == <span class="string">&#x27;y&#x27;</span></span><br><span class="line">check_type = <span class="built_in">input</span>(<span class="string">&quot;是否需要检测代理类型？(y/n): &quot;</span>).strip().lower() == <span class="string">&#x27;y&#x27;</span></span><br><span class="line">check_https = <span class="built_in">input</span>(<span class="string">&quot;是否需要检测是否支持 HTTPS？(y/n): &quot;</span>).strip().lower() == <span class="string">&#x27;y&#x27;</span></span><br><span class="line">only_check_availability = <span class="keyword">not</span> (check_region <span class="keyword">or</span> check_type <span class="keyword">or</span> check_https)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 补充检测信息</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\n🔍 正在分析代理信息...&quot;</span>)</span><br><span class="line"><span class="keyword">with</span> concurrent.futures.ThreadPoolExecutor() <span class="keyword">as</span> executor:</span><br><span class="line">analyzed_proxies = <span class="built_in">list</span>(</span><br><span class="line">executor.<span class="built_in">map</span>(<span class="keyword">lambda</span> p: analyze_proxy(p, check_region, check_type, check_https), selected_proxies))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证可用性</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\n⚡ 正在验证代理可用性...&quot;</span>)</span><br><span class="line"><span class="keyword">with</span> concurrent.futures.ThreadPoolExecutor() <span class="keyword">as</span> executor:</span><br><span class="line">valid_proxies = <span class="built_in">list</span>(<span class="built_in">filter</span>(<span class="literal">None</span>, executor.<span class="built_in">map</span>(validate_proxy, analyzed_proxies)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存有效代理 IP</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">format_choice = <span class="built_in">input</span>(<span class="string">&quot;请选择有效代理 IP 的输出格式 (json/txt): &quot;</span>).strip().lower()</span><br><span class="line"><span class="keyword">if</span> format_choice <span class="keyword">in</span> [<span class="string">&#x27;json&#x27;</span>, <span class="string">&#x27;txt&#x27;</span>]:</span><br><span class="line">output_filename = <span class="string">f&#x27;valid_proxies_<span class="subst">&#123;current_time&#125;</span>.<span class="subst">&#123;format_choice&#125;</span>&#x27;</span></span><br><span class="line"><span class="keyword">if</span> format_choice == <span class="string">&#x27;txt&#x27;</span>:</span><br><span class="line">only_ip = <span class="built_in">input</span>(<span class="string">&quot;是否仅输出代理 IP，每行一个代理？(y/n): &quot;</span>).strip().lower() == <span class="string">&#x27;y&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">only_ip = <span class="literal">False</span></span><br><span class="line">save_proxies(valid_proxies, format_choice, output_filename, only_ip)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;\n🎉 找到 <span class="subst">&#123;<span class="built_in">len</span>(valid_proxies)&#125;</span> 个有效代理，已保存到 <span class="subst">&#123;output_filename&#125;</span>&quot;</span>)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;输入无效，请输入 &#x27;json&#x27; 或 &#x27;txt&#x27;。&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">main()</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 网络爬虫 </category>
          
          <category> 代理IP </category>
          
          <category> 数据采集 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Cursor优化与MCP使用指南：提升AI编程助手效率</title>
      <link href="/2023/04/01/Cursor%E4%BC%98%E5%8C%96%E4%B8%8EMCP%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
      <url>/2023/04/01/Cursor%E4%BC%98%E5%8C%96%E4%B8%8EMCP%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="Cursor优化与MCP使用指南：提升AI编程助手效率"><a href="#Cursor优化与MCP使用指南：提升AI编程助手效率" class="headerlink" title="Cursor优化与MCP使用指南：提升AI编程助手效率"></a>Cursor优化与MCP使用指南：提升AI编程助手效率</h1><p>Cursor作为一款基于AI的编程工具，通过合理的配置和优化可以显著提升工作效率。本文将分享个人使用Cursor的经验，重点介绍全局规则优化和MCP工具的配置使用，帮助你让AI编程助手更智能、更高效。</p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>在开始优化之前，确保你的环境满足以下条件：</p><ul><li>Windows&#x2F;MacOS&#x2F;Linux操作系统</li><li>Cursor 最新版本（本文基于0.48.6版本）</li><li>Chrome浏览器（用于MCP扩展）</li><li>Node.js环境（用于运行MCP服务器）</li><li>稳定的网络连接（推荐使用代理工具）</li></ul><h2 id="全局规则优化"><a href="#全局规则优化" class="headerlink" title="全局规则优化"></a>全局规则优化</h2><p>Cursor的表现很大程度上取决于我们提供的指令和规则。通过设置全局思考框架，可以让AI助手进行更深入、更有条理的思考。</p><h3 id="AI模型思考框架优化"><a href="#AI模型思考框架优化" class="headerlink" title="AI模型思考框架优化"></a>AI模型思考框架优化</h3><p>以下是一个高效的全局规则模板，可以提升AI模型的思考能力：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">## AI Model Thinking Framework Optimization</span><br><span class="line"></span><br><span class="line">### Basic Principles of Thinking Process</span><br><span class="line"></span><br><span class="line">AI models should engage in a **comprehensive, natural, and unfiltered** thinking process for every interaction with humans. This process should occur before and during responding, ensuring that the model continuously thinks and reflects to improve responses.</span><br><span class="line"></span><br><span class="line">Key guidelines for the thinking process:</span><br><span class="line">- Express thinking in code blocks with a `thinking` header.</span><br><span class="line">- Think in a raw, organic, and stream-of-consciousness manner, akin to an &quot;internal monologue.&quot;</span><br><span class="line">- Avoid rigid lists or structured formats.</span><br><span class="line">- Thoughts should flow naturally between elements, ideas, and knowledge.</span><br><span class="line">- Consider multiple dimensions of the problem before forming a response.</span><br><span class="line"></span><br><span class="line">## Adaptive Thinking Framework</span><br><span class="line"></span><br><span class="line">The thinking process should adapt to the unique characteristics of human messages:</span><br><span class="line">- Adjust analysis depth based on:</span><br><span class="line">  * Query complexity</span><br><span class="line">  * Stakes involved</span><br><span class="line">  * Time sensitivity</span><br><span class="line">  * Available information</span><br><span class="line">  * Human&#x27;s apparent needs</span><br><span class="line">- Adjust thinking style based on:</span><br><span class="line">  * Technical vs. non-technical content</span><br><span class="line">  * Emotional vs. analytical context</span><br><span class="line">  * Single vs. multiple document analysis</span><br><span class="line">  * Abstract vs. concrete problems</span><br><span class="line">  * Theoretical vs. practical questions</span><br></pre></td></tr></table></figure><p>这只是完整规则的一部分，完整版规则包含了更多关于核心思考序列、问题空间探索、假设生成、验证与质量控制等方面的详细指导。</p><h3 id="设置全局规则的方法"><a href="#设置全局规则的方法" class="headerlink" title="设置全局规则的方法"></a>设置全局规则的方法</h3><ol><li>打开Cursor设置页面</li><li>找到”Instructions”或”自定义指令”选项</li><li>粘贴完整的思考框架规则</li><li>保存设置</li></ol><p>这样设置后，AI助手将在每次回答问题时都遵循这个思考框架，提供更加深入和有条理的回答。</p><h3 id="适用的模型"><a href="#适用的模型" class="headerlink" title="适用的模型"></a>适用的模型</h3><p>经过测试，这套思考框架在以下模型上效果最佳（按效果排序）：</p><ol><li>Claude 3.7 Sonnet</li><li>Claude 3.7 Haiku</li><li>Gemini 2.5-03-25</li><li>Claude 3.5 Sonnet</li></ol><h2 id="MCP（Model-Context-Protocol）工具配置"><a href="#MCP（Model-Context-Protocol）工具配置" class="headerlink" title="MCP（Model Context Protocol）工具配置"></a>MCP（Model Context Protocol）工具配置</h2><p>MCP是一种扩展AI模型能力的协议，让Cursor等AI工具能够调用外部服务，实现更多功能。</p><h3 id="什么是MCP"><a href="#什么是MCP" class="headerlink" title="什么是MCP"></a>什么是MCP</h3><p>Model Context Protocol (MCP) 是Anthropic公司推出的一种协议，允许AI模型通过特定接口调用外部工具和服务，极大地扩展了AI助手的能力边界。通过MCP，Cursor可以：</p><ul><li>搜索网络内容</li><li>读取和分析文件系统</li><li>与浏览器交互</li><li>连接API文档</li><li>执行命令行操作</li><li>等等</li></ul><h3 id="MCP配置基础"><a href="#MCP配置基础" class="headerlink" title="MCP配置基础"></a>MCP配置基础</h3><p>首先确保你的环境已安装Node.js，然后配置MCP服务器：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;mcpServers&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;github.com/exa-labs/exa-mcp-server&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cmd&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;/c&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;npx&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;exa-mcp-server&quot;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;env&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;EXA_API_KEY&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Your-Key&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;disabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;autoApprove&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;search&quot;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;filesystem&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cmd&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;/c&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;npx&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;-y&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;@modelcontextprotocol/server-filesystem&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;D:\\work\\myProject&quot;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;browser-tools-mcp&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cmd&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;/c&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;npx&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;-y&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;@agentdeskai/browser-tools-mcp@latest&quot;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="配置MCP的两种方式"><a href="#配置MCP的两种方式" class="headerlink" title="配置MCP的两种方式"></a>配置MCP的两种方式</h3><ol><li><p><strong>全局配置</strong>：</p><ul><li>打开Cursor设置</li><li>找到MCP Servers选项</li><li>点击”New”按钮</li><li>粘贴上面的配置代码并保存</li></ul></li><li><p><strong>项目特定配置</strong>：</p><ul><li>在项目根目录创建<code>.cursor</code>文件夹</li><li>在文件夹中创建<code>mcp.json</code>文件</li><li>粘贴配置代码并保存</li></ul></li></ol><p>配置成功后，Cursor界面中对应的MCP服务器旁边会显示绿色圆点，表示服务已成功启动。</p><h2 id="推荐的MCP工具"><a href="#推荐的MCP工具" class="headerlink" title="推荐的MCP工具"></a>推荐的MCP工具</h2><h3 id="1-BrowserTools-MCP"><a href="#1-BrowserTools-MCP" class="headerlink" title="1. BrowserTools MCP"></a>1. BrowserTools MCP</h3><p>BrowserTools MCP是一个强大的工具，使Cursor能够与Chrome浏览器进行交互，获取控制台日志、截图、网络请求等信息。</p><h4 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h4><ol><li><p><strong>安装Chrome扩展</strong>：</p><ul><li>从GitHub下载BrowserTools-1.2.0-extension.zip</li><li>解压后在Chrome中加载已解压的扩展程序</li></ul></li><li><p><strong>运行本地Node服务器</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx @agentdeskai/browser-tools-server@latest</span><br></pre></td></tr></table></figure></li><li><p><strong>配置MCP服务器</strong>：</p><ul><li>按照前面介绍的方法配置browser-tools-mcp</li></ul></li><li><p><strong>验证安装</strong>：</p><ul><li>在Chrome开发者工具中找到BrowserToolsMCP面板</li><li>确认显示”Connected to browser-tools-server”</li><li>在Cursor中测试相关功能</li></ul></li></ol><h4 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h4><ul><li>截取屏幕截图</li><li>获取控制台日志和错误</li><li>监控网络请求和响应</li><li>获取选定的DOM元素</li><li>运行性能和可访问性审计</li></ul><h3 id="2-Apifox-MCP"><a href="#2-Apifox-MCP" class="headerlink" title="2. Apifox MCP"></a>2. Apifox MCP</h3><p>Apifox MCP可以将Cursor与Apifox API文档管理工具连接起来，使AI助手能够直接读取和理解API文档。</p><h4 id="安装步骤-1"><a href="#安装步骤-1" class="headerlink" title="安装步骤"></a>安装步骤</h4><ol><li><p><strong>生成Apifox API Key</strong>：</p><ul><li>登录Apifox</li><li>进入个人设置生成API令牌</li></ul></li><li><p><strong>获取项目ID</strong>：</p><ul><li>在Apifox中找到你的项目</li><li>复制项目ID</li></ul></li><li><p><strong>配置MCP服务器</strong>：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;mcpServers&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;API 文档&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cmd&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;/c&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;npx&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;-y&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;apifox-mcp-server@latest&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;--project=XXXXX&quot;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;env&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;APIFOX_ACCESS_TOKEN&quot;</span><span class="punctuation">:</span> <span class="string">&quot;XXXX&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>验证安装</strong>：</p><ul><li>确认MCP服务器已成功启动</li><li>在Cursor中测试API文档相关功能</li></ul></li></ol><h2 id="Cursor常见问题与解决方案"><a href="#Cursor常见问题与解决方案" class="headerlink" title="Cursor常见问题与解决方案"></a>Cursor常见问题与解决方案</h2><p>使用Cursor时可能会遇到一些问题，如AI模型”降智”、无法解决特定问题等。以下是一些解决方法：</p><h3 id="模型降智现象"><a href="#模型降智现象" class="headerlink" title="模型降智现象"></a>模型降智现象</h3><p>有时候Cursor可能会出现反复分析问题但无法给出有效解决方案的情况，这种”降智”现象的解决方法包括：</p><ol><li><strong>创建新账号</strong>：有时候账号与模型之间可能存在一些设置冲突</li><li><strong>开始新对话</strong>：清除历史上下文，避免之前的对话干扰当前问题</li><li><strong>休息一下</strong>：暂时离开，过一段时间再回来尝试</li></ol><h3 id="提高质量的技巧"><a href="#提高质量的技巧" class="headerlink" title="提高质量的技巧"></a>提高质量的技巧</h3><ol><li><strong>明确任务边界</strong>：给AI明确的任务范围和边界</li><li><strong>提供足够上下文</strong>：让AI了解项目背景和需求</li><li><strong>使用思考链</strong>：引导AI一步步思考问题</li><li><strong>关注结果而非过程</strong>：评价AI的表现要看它做了什么，而不是它说了什么</li></ol><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>通过合理配置全局规则和MCP工具，Cursor的能力可以得到极大提升，成为真正高效的编程助手。希望本文分享的经验和技巧能对你的日常工作有所帮助。</p><p>记住，AI工具的强大之处在于它们能够帮助我们处理重复性工作，让我们有更多时间专注于创造性思考。通过不断优化和调整，你将能够最大化Cursor的价值。</p><p>欢迎在评论区分享你使用Cursor的经验和技巧！</p><h2 id="参考资源"><a href="#参考资源" class="headerlink" title="参考资源"></a>参考资源</h2><ol><li><a href="https://github.com/AgentDeskAI/browser-tools-mcp">BrowserTools MCP GitHub</a></li><li><a href="https://apifox.com/help">Apifox官方文档</a></li><li><a href="https://cursor.sh/docs">Cursor官方文档</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 技术教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cursor </tag>
            
            <tag> MCP </tag>
            
            <tag> AI </tag>
            
            <tag> 编程工具 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
